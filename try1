#!/usr/bin/env python3

import sys
import fileinput


def isParent(name1, name2):
    if not name1 in tree or not name2 in tree:
        return False
    if name1 not in tree.get(name2)[0]:
        return False
    return True

def isChild(name1, name2): 
	if not name1 in tree or not name2 in tree:
		return False
	if name1 not in tree.get(name2)[2]:
		return False
	return True

def isSpouse(name1, name2): 
	if not name1 in tree or not name2 in tree:
		return False
	if name1 not in tree.get(name2)[1]:
		return False
	return True

def isSibling(name1, name2):
	if not name1 in tree or not name2 in tree:
		return False
	if len(set(tree[name1][0]).intersection(tree.get(name2)[0])) == 1:
		return True
	return False

def isAncestorOf(name1, name2):
	if not name1 in tree or not name2 in tree:
		return False
	if len(tree[name2][0]) != 2:
		return False
	name2Parent1 = tree.get(name2)[0][0]
	name2Parent2 = tree.get(name2)[0][1]
	if name2Parent1 == name1 or name2Parent2 == name1:
		return True
	else:
		return isAncestorOf(name1, name2Parent1) or isAncestorOf(name1, name2Parent2)

def isCousinOf(name1, name2):
    if not name1 in tree or not name2 in tree:
        return False
    if (name1 == name2):
        return False
    ancList1 = listAncestor(name1)
    ancList2 = listAncestor(name2)
    if name1 in anclist2 or name2 in anclist1:
    	return False
    for name in ancList1:
        if name in ancList2:
            return True
    return False

def isUnrelated(name1, name2):
	if not name1 in tree or not name2 in tree:
		return True
	if (name1 == name2):
		return False
	ancList1 = listAncestor(name1)
	ancList2 = listAncestor(name2)
	for name in ancList1:
		if name in ancList2:
			return False
	return True

def getchildren(name1):
	childrenlist = []
	for i in listOfNames:
		if isChild(i,name1) and i != name:
			childrenlist.append(i)
	return childrenlist

def listAncestor(name):
	ancList = []
	for i in listOfNames:
		if isAncestorOf(i, name) and i != name:
			ancList.append(i)
	return ancList

def listSibling(name):
	siblingList = []
	for i in listOfNames:
		if tree.get(name)[0] == tree.get(i)[0] and name != i:
			siblingList.append(i)
	return siblingList

def listCousin(name1):
    if not name1 in tree or not name2 in tree:
        return False
    commonCousins = []
    i=0
    while (i < len(tree)):
        pName = listOfNames[i]
        if not isAncestorOf(pName, name1):
            if isCousinOf(name1, pName) == True:
                commonCousins.append(pName)
        i +=1
    return commonCousins

def listUnrelated(name1):
	unrelated = []
	i=0
	while (i < len(tree)):
		pName = listOfNames[i]
		if isUnrelated(name1, pName) == True:
			unrelated.append(pName)
		i += 1
	return unrelated



if __name__ == "__main__":
    tree = dict()
    listOfNames = []

    for line in fileinput.input():
        if line.startswith('E'):
            y = line.split()
            for i in range(1,len(y)):
                persons = []    # key
                parents = []    #0th index
                children = []
                spouses = []
                persons.append(parents)
                persons.append(spouses)
                persons.append(children)
                if y[i] not in listOfNames:
                    listOfNames.append(y[i])
                    if i == 1:
                        tree.update({y[i]: persons})
                        spouses.append(y[2])
                        if len(y) == 4:
                        	print ('len=3')
                        	children.append(y[3])
                    if i == 2:
                        tree.update({y[i]: persons})
                        spouses.append(y[1])
                        if len(y) == 4:
                        	print ('len=3')
                        	children.append(y[3])
                    try:
                        if i == 3:
                            tree.update({y[i]: persons})
                            parents.append(y[1])
                            parents.append(y[2])
                    except IndexError as e:
                        pass
                else:
                	if i == 1:
                		spouses.append(y[2])
                		if len(y) == 4:
                			print ('len=3')
                			children.append(y[3])
                	if i == 2:
                		spouses.append(y[1])
                		if len(y) == 4:
                			print ('len=3')
                			children.append(y[3])
                	try:
                		if i == 3:
                			if y[1] not in tree.get(y[i])[0]:
                				tree.get(y[i])[0].append(y[1])
                			if y[2] not in tree[y[i]][0]:
                				tree.get(y[i])[0].append(y[2])
                	except IndexError as e:
                		pass
            print ('E - added')
        elif line.startswith('X'):
            relation = line.split()[2]
            name1 = line.split()[1]
            name2 = line.split()[3]
            print("X {} {} {}".format(name1, relation, name2))

            if relation == 'child':
                result = isChild(name1, name2)
            elif relation == 'spouse':
                result = isSpouse(name1,name2)
            elif relation == 'sibling':
                result = isSibling(name1, name2)
            elif relation == 'ancestor':
                result = isAncestorOf(name1, name2)
            elif relation == 'cousin':
                result = isCousinOf(name1, name2)
            elif relation == 'unrelated':
                result = isUnrelated(name1, name2)
            if result :
                print("Yes")
            else:
                print("No")
            print("X - ran")
        elif line.startswith('W'):
            line = line.split()
            relation = line[1]
            name = line[2]
            printList = []

            print("W {} {}".format(relation, name))
            if name in tree:
                if relation == 'child' :
                    print(tree.get(name)[2])
                elif relation == 'spouse' :
                    print(tree.get(name)[1])
                elif relation == 'sibling':
                    sibs = []
                    for i in listOfNames:
                        if isSibling(name, i):
                            sibs.append(i)
                    print(sibs)
                elif relation == 'ancestor' :
                    ancList=listAncestor(name)
                    print(ancList)
                elif relation == 'cousin' :
                    cousList = listCousin(name)
                    print(cousList)
                elif relation == 'unrelated' :
                    print(listUnrelated)
                print("")
            print('W - ran ')

